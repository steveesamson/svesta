import{t as U,h as H,a as N}from"../chunks/CmHqByzz.js";import"../chunks/BGcDROCU.js";import{s,f as G,$ as z,n as $}from"../chunks/eZGv4jwx.js";import{h as a}from"../chunks/BvRqW2WB.js";var Q=U('<meta property="og:type" content="svesta home"> <meta property="og:title" content="Svesta home">',1),Y=U(`<h1>svesta</h1> <p><code>svesta</code> - is a tiny <code>sve</code>lte <code>sta</code>te management library for <code>svelte/sveltekit</code>.</p> <h2>Installation</h2> <!> <p>There are 6 major exported components in <code>svesta</code>, they are:</p> <ul><li><p><code>Transport</code>: This allows the creation of requests, which starts as <code>fetch</code> but could migrate to <code>WebSocket</code>, especially, when <code>Transport</code> is <code>configure</code>d with a realTime as in <code>&#123; realTime: &#123; transport:['websocket','polling'],... &#125; &#125;</code>. <code>realTime</code> accepts valid valid <code>socket.io-client</code> props.</p></li> <li><p><code>useStore</code>: The main component of <code>svesta</code>. It is responsible for creating reactive stores for providing a <code>REST</code>ful interface for any <code>REST</code> API while supporting real-time data exchanges.</p></li> <li><p><code>Resource</code>: <code>Resource</code> is a <code>svelte</code> component, which helps manage the network and resolution of promises to notify of <code>loading</code>, <code>errors</code> or <code>data</code> availability on success.</p></li> <li><p><code>useEvents</code>: This allows components exchange informations in a reliable manner, using events.</p></li> <li><p><code>network</code>: <code>network</code> allows the determination of network states. It exposed a <code>status</code> attribute that helps you do that. For instance, when <code>network.status.online</code> is <code>true =&gt; online</code> and <code>false =&gt; offline</code>.</p></li> <li><p><code>Offline</code>: A <code>svelte</code> component, which displays its <code>children</code> when <code>network.status.online</code> is <code>false</code>. It helps in monitoring network activities.</p></li></ul> <p>Let us examine each component in detail.</p> <h3>1. Transport</h3> <p><code>Transport</code> is useful in requesting any arbitrary HTTP(S) endpoint. <code>Transport</code> exposes 2 methods, <code>configure</code> and <code>instance</code>:</p> <ul><li><code>configure</code>: It allows the customization of HTTP(S) requests. Such customization could be achieved as below, especially in your <code>+layout.[t|j]s</code>:</li></ul> <!> <blockquote><p>Best practices favors doing all your Transport configuration in the <code>+layout.[t|j]s</code> in a manageable way. While <code>Transport.configure</code> could be done within your view’s <code>$effect</code> or in your <code>+page.[j|t]s</code>, the recommended place to do the setupu is the <code>+layout.[j|t]s</code> like below:</p></blockquote> <h4>In +layout.ts</h4> <!> <ul><li><code>instance</code>: By default, <code>Transport</code> creates a <code>default</code> instance, which gets returned when no argument is passed to <code>instance</code>. If you do not want the transport to be a top-level(default) one, tag it with a context. This allows you have multiple transport instances. The field is also used in accessing the instance later. <code>instance</code> accepts either a <code>TransportInstanceProps</code> type.</li></ul> <!> <h4>In +page.[t|j]s</h4> <p>Transport <code>instance</code> plays well with <code>+page.[t|j]s</code> allowing us to specify what <code>fetch</code> to use.</p> <h5>Default context</h5> <!> <h5>News context</h5> <!> <p><code>Transport</code> competently handles <code>GET</code>, <code>POST</code>, <code>PUT</code>, <code>PATCH</code>, <code>OPTIONS</code> and <code>DELETE</code> HTTP methods via the exposed methods: <code>.get</code>, <code>.post</code>, <code>.put</code>, <code>.patch</code>, <code>.delete</code>, <code>.options</code> and <code>.upload</code>. An example could look like the following:</p> <!> <!> <blockquote><p>Note that you must have configured the <code>news</code> transport <code>context</code> before using it like so:</p></blockquote> <!> <p><code>Transport</code> also exposes a <code>loading</code>, which actually, is a field indicative of whether an active request is happening.</p> <h3>3. useStore</h3> <p>If the target of requests are <code>REST</code>ful APIs, then the appropriate component from <code>svesta</code> is the <code>useStore</code>. <code>useStore</code> defines 2 parameters:</p> <ul><li><code>resourceName</code>: This is a <code>string</code> that represents the name or path of REST resource. This is required.</li> <li><code>storeOption</code>: This is a <code>StoreProps&lt;T&gt;</code>, explained in detail below. This is optional.</li></ul> <blockquote><p>Note: <code>useStore</code> uses <code>Transport</code> under the hood, therefore, configurations set on <code>Transport.configure</code> also affect <code>useStore</code>.</p></blockquote> <!> <p><code>useStore</code> maintains its internal structure as a <code>StoreState&lt;T&gt;</code>. In our example above, <code>T</code> is <code>User</code>. The structure as as shown below:</p> <!> <p>The reason for a <code>resultTransformer</code>, is to convert API responses that do not conform to <code>StoreState&lt;T&gt;</code>. Look at the API in our example, that is, <a href="https://reqres.in/api" rel="nofollow">regres.in</a>. <code>regres.in</code> API returns its response as:</p> <!> <p>However, <code>useStore</code> cannot store data like this, hence, the need to implement a result transformer to convert as below:</p> <!> <blockquote><p>Note: You can register a global resultTransformer, by using the <code>useGlobalResultTransformer</code> hook.</p></blockquote> <blockquote><p>You can equally register a global queryTransformer, by using the <code>useGlobalQueryTransformer</code> hook.</p></blockquote> <p><code>useStore</code> exposes <code>result</code>, which is a state object comprising of:</p> <ul><li><code>loading</code>: A <code>boolean</code> indicative of on-going network request or not.</li> <li><code>error</code>: A <code>string</code> that is non-empty whenever <code>store</code> request resolves with some error.</li> <li><code>data</code>: An object of type <code>T[]</code> representing the data from API when store request resolves with no <code>error</code>.</li></ul> <!> <!> <p><code>useStore</code> exposes the following methods:</p> <ul><li><code>.sync</code>: This synchronizes the store by fetching the first page from the resource. This could also be used to pre-populate the store by passing data. This is typically a <code>GET</code> scoped to the resource only. When this executes, it populates the store and notifies all views depending on the store for appropriate view updates. <blockquote><p>This is asynchronous, therefore, if you need the population before something else, you must <code>await</code> its call.</p></blockquote></li></ul> <!> <ul><li><p><code>.next</code>: This synchronizes the store by fetching the <code>next</code> page from the resource depending. This is typically a <code>GET</code> scoped to the resource only. When this executes, it populates the store and notifies all views depending on the store for appropriate view updates.</p> <blockquote><p>This is asynchronous, therefore, if you need the population before something else, you must <code>await</code> its call. Important to note also is that previous store data are replaced by the new result.</p></blockquote></li> <li><p><code>.prev</code>: This synchronizes the store by fetching the <code>previous</code> page from the resource depending. This is typically a <code>GET</code> scoped to the resource only. When this executes, it populates the store and notifies all views depending on the store for appropriate view updates.</p> <blockquote><p>This is asynchronous, therefore, if you need the population before something else, you must <code>await</code> its call. Important to note also is that previous store data are replaced by the new result.</p></blockquote></li> <li><p><code>.more</code>: This synchronizes the store by fetching <code>more</code> pages from the resource but rather than replace the store data like in the case of <code>.next</code> or <code>.prev</code>, it appends result to the existing store data, useful in endless loading. This is typically a <code>GET</code> scoped to the resource only. When this executes, it populates the store and notifies all views depending on the store for appropriate view updates.</p> <blockquote><p>This is asynchronous, therefore, if you need the population before something else, you must <code>await</code> its call. Important to note also is that the new result is added/appended to the previous store data not replaced.</p></blockquote></li></ul> <!> <p>Using <code>Resource</code>(we’ll explain next), we can have the following:</p> <!> <ul><li><p><code>.pageTo</code>: This synchronizes the store by fetching the <code>next/previous</code> page from the resource depending on <code>offset</code> passed. This work with offsets. This is typically a <code>GET</code> scoped to the resource only. When this executes, it populates the store and notifies all views depending on the store for appropriate view updates.</p> <blockquote><p>This is asynchronous, therefore, if you need the population before something else, you must <code>await</code> its call. Important to note also is that previous store data are replaced by the new result.</p></blockquote></li> <li><p><code>.save</code>: This does a scoped <code>POST</code> or <code>PUT</code> based on resource. For new data, i.e, data without <code>id</code>, it does <code>POST</code> otherwise, it does a <code>PUT</code>. When this executes, it updates the store and notifies all views depending on the store for appropriate view updates. It returns a <code>Promise&lt;TransportResponse&lt;T&gt;&gt;</code>.</p> <blockquote><p>This is asynchronous, therefore, if you need the saving before something else, you must <code>await</code> its call.</p></blockquote></li></ul> <!> <ul><li><code>.destroy</code>: This does a scoped <code>DELETE</code> based on resource. It expects a <code>WithID</code> type that must contain the <code>id</code>. When this executes, it updates the store and notifies all views depending on the store for appropriate view updates. It returns a <code>Promise&lt;TransportResponse&lt;T&gt;&gt;</code>. <blockquote><p>This is asynchronous, therefore, if you need the saving before something else, you must <code>await</code> its call.</p></blockquote></li></ul> <!> <ul><li><code>.search</code>: This does a scoped <code>GET</code> based on resource but appends a <code>&search=&lt;searchTerm&gt;</code> to the endpoint. It expects a <code>searchTerm</code>, a string. When this executes, it updates the store and notifies all views depending on the store for appropriate view updates. It returns a <code>Promise&lt;void&gt;</code>.</li></ul> <!> <ul><li><code>.get</code>: This does a scoped <code>GET</code> based on resource but appends the passed <code>path</code> to resource <code>url</code>. When this executes, it does not updates the store. It returns a <code>Promise&lt;TransportResponse&lt;T&gt;&gt;</code>.</li></ul> <!> <ul><li><code>.post</code>: This does a scoped <code>POST</code> based on resource but appends the passed <code>path</code> to resource <code>url</code>. When this executes, it does not updates the store. It returns a <code>Promise&lt;TransportResponse&lt;T&gt;&gt;</code>.</li></ul> <!> <ul><li><code>.find</code>: This does searches the store to locate the first item that match the search <code>value</code>, using the passed <code>key</code> or <code>undefined</code> when there are no match. <code>HTTP</code> request could be involved, especially if store was not <code>sync</code>ed yet. It returns a <code>Promise&lt;T | undefined&gt;</code>. <blockquote><p>This is asynchronous, therefore, you must <code>await</code> its call.</p></blockquote></li></ul> <!> <ul><li><code>.filter</code>: This does filtering based on passed <code>query</code> param of type <code>Partial&lt;T&gt;</code>. <code>HTTP</code> request is involved. It returns a <code>void</code>. When this executes, it updates the store and notifies all views depending on the store for appropriate view updates.</li></ul> <!> <ul><li><code>.on</code>: This does allows the registering of event listeners on stores so we can react to those events should they fire. Possible events are <code>refresh</code>, <code>create</code>, <code>destroy</code>, <code>update</code>.</li></ul> <!> <p>The following methods of store do not make network requests when used but they propagate changes to the view. They are added for the purpose of prototyping without persistence. These methods are:</p> <ul><li><code>.debug</code>: This logs store info to the console. Useful during dev.</li> <li><code>.add</code>: Add items to store</li> <li><code>.remove</code>: Removes specific item from store</li> <li><code>.patch</code>: Updates specific item in store</li></ul> <!> <h3>3. Resource</h3> <p>As mentioned earlier, <code>Resource</code>, is a <code>svelte</code> component, which helps manage the network requests while using <code>store</code> to manage REST resources. <code>Resource</code> also handles resolution of promises and notify of <code>result</code> during an on-going network request, <code>errors</code> on events of HTTP <code>errors</code> or <code>data</code> availability on success.</p> <p><code>Resource</code> accepts 2 props:</p> <ul><li><code>store</code>: A type of <code>Store&lt;T&gt;</code>, which by all means is an instance of <code>useStore</code>. This prop is required.</li> <li><code>resolve</code>: A <code>svelte runes snippet</code> of type <code>Snippet&lt;[StoreResult&lt;T&gt;]&gt;</code> that get called when <code>Resource</code> resolves the <code>store</code> passed to it. It is responsible for rendering the data from <code>store</code> when store resolves. This prop is required.</li></ul> <p>See example in demo app.</p> <p><code>Resource</code> is just a <code>svelte</code> component used as below:</p> <!> <!> <h3>4. useEvents</h3> <p><code>useEvents</code>: This allows components exchange informations in a reliable manner, using events rather than passing props. For instance, see the following:</p> <!> <p>In another component, we can track and use the created <code>loadEvent</code> like so:</p> <!> <!> <h3>5. network</h3> <p><code>network</code> allows the determination of network states. It exposed a <code>status</code> attribute that helps you do that. For instance, when <code>network.status.online</code> is <code>true =&gt; online</code> and <code>false =&gt; offline</code>. This can be used both in view and non-view components. For instance, the <code>Offline</code> component was build by using <code>network</code>.</p> <h3>6. Offline</h3> <p>This is a <code>svelte</code> component, which displays its <code>children</code> when <code>network.status.online</code> is <code>false</code>. It helps in monitoring network activities in view components. The usage as as shown below:</p> <!> <!>`,1);function X(L){var n=Y();H(j=>{var W=Q();z.title="Svesta Home & Docs",$(2),N(j,W)});var o=s(G(n),6);a(o,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #767C9DB0; font-style: italic"># In your project directory</span></span>
<span class="line"><span style="color: #91B4D5">npm</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">install</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">svesta</span></span>
<span class="line"></span>
<span class="line"><span style="color: #91B4D5">or</span></span>
<span class="line"></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic"># In your project directory</span></span>
<span class="line"><span style="color: #91B4D5">yarn</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">add</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">svesta</span></span></code></pre>`);var l=s(o,14);a(l,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">type</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">TransportConfig</span><span style="color: #A6ACCD">,</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">Transport</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">configOptions</span><span style="color: #91B4D5">:</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCDC0">TransportConfig</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> &#123;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// Log out details or not. Default is false.</span></span>
<span class="line"><span style="color: #E4F0FB">	</span><span style="color: #ADD7FF">DEBUG</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #5DE4C7">true</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// Set the base URL. Default is &#39;&#39;.</span></span>
<span class="line"><span style="color: #E4F0FB">	</span><span style="color: #ADD7FF">BASE_URL</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">https://some-base-url</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// External fetch implementation could be passed.</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// Default is undefined.</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// Either window.fetch or fetch from</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// +page.[t|j]s&#39; onload as shown in our example.</span></span>
<span class="line"><span style="color: #E4F0FB">	</span><span style="color: #ADD7FF">fetch</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #E4F0FB">window</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FB">fetch</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// Allow or disallow migration to web socket.</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// Default is undefined.</span></span>
<span class="line"><span style="color: #E4F0FB">	</span><span style="color: #ADD7FF">realTime</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#123;</span><span style="color: #E4F0FB"> </span><span style="color: #ADD7FF">transport</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">[</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">websocket</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">]</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#125;,</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// Allows the override of the base fetch RequestInit.</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// Default is undefined.</span></span>
<span class="line"><span style="color: #E4F0FB">	</span><span style="color: #ADD7FF">init</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #E4F0FB">RequestInit</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// If you do not want the transport to be a top-level(default)</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// one, tag it with a context</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// This allows you have multiple transport instances.</span></span>
<span class="line"><span style="color: #E4F0FB">	</span><span style="color: #ADD7FF">context</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">news</span><span style="color: #A6ACCD">&#39;</span><span style="color: #ADD7FF"> </span><span style="color: #767C9DB0; font-style: italic">// This is used in accessing the instance later</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// A function that allows user set headers before sending requests</span></span>
<span class="line"><span style="color: #ADD7FF">	</span><span style="color: #E4F0FBD0">beforeSend</span><span style="color: #A6ACCD">(</span><span style="color: #E4F0FB">headers</span><span style="color: #ADD7FF">:</span><span style="color: #E4F0FB">Params</span><span style="color: #A6ACCD">)&#123;</span></span>
<span class="line"><span style="color: #E4F0FB">	</span><span style="color: #A6ACCD">&#125;</span></span>
<span class="line"><span style="color: #A6ACCD">&#125;;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E4F0FB">Transport</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">configure</span><span style="color: #A6ACCD">(</span><span style="color: #E4F0FB">configOptions</span><span style="color: #A6ACCD">);</span></span></code></pre>`);var p=s(l,6);a(p,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">Transport</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// This is configured on the default context</span></span>
<span class="line"><span style="color: #E4F0FB">Transport</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">configure</span><span style="color: #A6ACCD">(&#123;</span><span style="color: #E4F0FB"> </span><span style="color: #ADD7FF">BASE_URL</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">https://reqres.in/api</span><span style="color: #A6ACCD">&#39;</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#125;);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #5DE4C7">export</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">prerender</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #5DE4C7">true</span><span style="color: #A6ACCD">;</span></span></code></pre>`);var e=s(p,4);a(e,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">Transport</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// Just for news, as configured above</span></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">newsTransport</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">Transport</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">instance</span><span style="color: #A6ACCD">(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">news</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">);</span></span></code></pre>`);var t=s(e,8);a(t,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #767C9DB0; font-style: italic">// from sveltekit</span></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">Transport</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">type</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">PageLoad</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">./$types.js</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">resultTransformer</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">..</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #5DE4C7">export</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">load</span><span style="color: #91B4D5">:</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCDC0">PageLoad</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #5DE4C7">async</span><span style="color: #A6ACCD"> (&#123; </span><span style="color: #E4F0FB">fetch</span><span style="color: #A6ACCD"> &#125;) </span><span style="color: #91B4D5">=&gt;</span><span style="color: #A6ACCD"> &#123;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// This is happening on the server and we have a ref to a fetch</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// implementation, let&#39;s use it by passing it to the configure</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// method of Transport</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">//Default transport</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">transport</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">Transport</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">instance</span><span style="color: #A6ACCD">(&#123;</span><span style="color: #E4F0FB"> fetch</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#125;);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> &#123; </span><span style="color: #E4F0FB">error</span><span style="color: #A6ACCD">, </span><span style="color: #91B4D5">...</span><span style="color: #E4F0FB">rest</span><span style="color: #A6ACCD"> &#125; </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #5DE4C7C0">await</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">transport</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">get</span><span style="color: #A6ACCD">(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">/users</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #5DE4C7C0">return</span><span style="color: #A6ACCD"> &#123;</span><span style="color: #E4F0FB"> </span><span style="color: #91B4D5">...</span><span style="color: #E4F0FBD0">resultTransformer</span><span style="color: #A6ACCD">(</span><span style="color: #E4F0FB">rest</span><span style="color: #A6ACCD">),</span><span style="color: #E4F0FB"> error</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#125;;</span></span>
<span class="line"><span style="color: #A6ACCD">&#125;;</span></span></code></pre>`);var c=s(t,4);a(c,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #767C9DB0; font-style: italic">// from sveltekit</span></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">Transport</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">type</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">PageLoad</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">./$types.js</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">resultTransformer</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">..</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #5DE4C7">export</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">load</span><span style="color: #91B4D5">:</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCDC0">PageLoad</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #5DE4C7">async</span><span style="color: #A6ACCD"> (&#123; </span><span style="color: #E4F0FB">fetch</span><span style="color: #A6ACCD"> &#125;) </span><span style="color: #91B4D5">=&gt;</span><span style="color: #A6ACCD"> &#123;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// This is happening on the server and we have a ref to a fetch</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// implementation, let&#39;s use it by passing it to the configure</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// method of Transport</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// Scoped only for news</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// Must have been configured too</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// Let&#39;s even use beforeSend</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">token</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">some-token</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">beforeSend</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> (</span><span style="color: #E4F0FB">headers</span><span style="color: #91B4D5">:</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCDC0">Params</span><span style="color: #A6ACCD">) </span><span style="color: #91B4D5">=&gt;</span><span style="color: #A6ACCD"> &#123;</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #E4F0FB">headers</span><span style="color: #A6ACCD">[</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">authorization</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">] </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCD">&#96;</span><span style="color: #5DE4C7">Bearer </span><span style="color: #A6ACCD">$&#123;</span><span style="color: #E4F0FB">token</span><span style="color: #A6ACCD">&#125;&#96;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #A6ACCD">	&#125;;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">transport</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">Transport</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">instance</span><span style="color: #A6ACCD">(&#123;</span><span style="color: #E4F0FB"> </span><span style="color: #ADD7FF">context</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">news</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span><span style="color: #E4F0FB"> fetch</span><span style="color: #A6ACCD">,</span><span style="color: #E4F0FB"> beforeSend</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#125;);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> &#123; </span><span style="color: #E4F0FB">error</span><span style="color: #A6ACCD">, </span><span style="color: #91B4D5">...</span><span style="color: #E4F0FB">rest</span><span style="color: #A6ACCD"> &#125; </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #5DE4C7C0">await</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">transport</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">get</span><span style="color: #A6ACCD">(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">/users</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #5DE4C7C0">return</span><span style="color: #A6ACCD"> &#123;</span><span style="color: #E4F0FB"> </span><span style="color: #91B4D5">...</span><span style="color: #E4F0FBD0">resultTransformer</span><span style="color: #A6ACCD">(</span><span style="color: #E4F0FB">rest</span><span style="color: #A6ACCD">),</span><span style="color: #E4F0FB"> error</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#125;;</span></span>
<span class="line"><span style="color: #A6ACCD">&#125;;</span></span></code></pre>`);var r=s(c,4);a(r,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #767C9DB0; font-style: italic">// Using the default instance</span></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> &#123; </span><span style="color: #E4F0FB">error</span><span style="color: #A6ACCD">, </span><span style="color: #E4F0FB">data</span><span style="color: #A6ACCD"> &#125; </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #5DE4C7C0">await</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">Trasport</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">instance</span><span style="color: #A6ACCD">().</span><span style="color: #E4F0FBD0">post</span><span style="color: #A6ACCD">(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">/users</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">, &#123;</span></span>
<span class="line"><span style="color: #E4F0FB">	</span><span style="color: #ADD7FF">name</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">Name</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #E4F0FB">	</span><span style="color: #ADD7FF">address</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">Some address</span><span style="color: #A6ACCD">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">&#125;);</span></span></code></pre>`);var C=s(r,2);a(C,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #767C9DB0; font-style: italic">// Using some context(news) instance</span></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">newsTransport</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">Transport</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">instance</span><span style="color: #A6ACCD">(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">news</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">);</span></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> &#123; </span><span style="color: #E4F0FB">error</span><span style="color: #A6ACCD">, </span><span style="color: #E4F0FB">data</span><span style="color: #A6ACCD"> &#125; </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #5DE4C7C0">await</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">newsTransport</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">post</span><span style="color: #A6ACCD">(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">/users</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">, &#123;</span></span>
<span class="line"><span style="color: #E4F0FB">	</span><span style="color: #ADD7FF">name</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">Name</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #E4F0FB">	</span><span style="color: #ADD7FF">address</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">Some address</span><span style="color: #A6ACCD">&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">&#125;);</span></span></code></pre>`);var y=s(C,4);a(y,()=>'<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #E4F0FB">Transport</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">configure</span><span style="color: #A6ACCD">(&#123;</span><span style="color: #ADD7FF">context</span><span style="color: #A6ACCD">:</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">news</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span><span style="color: #91B4D5">...</span><span style="color: #A6ACCD">.&#125;);</span></span></code></pre>');var A=s(y,12);a(A,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">type</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">StoreProps</span><span style="color: #A6ACCD">,</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">useStore</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// Create a store props</span></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">usersProps</span><span style="color: #91B4D5">:</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCDC0">StoreProps</span><span style="color: #A6ACCD">&lt;</span><span style="color: #A6ACCDC0">User</span><span style="color: #A6ACCD">&gt; </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> &#123;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// Parameters. Default &#123;&#125;</span></span>
<span class="line"><span style="color: #E4F0FB">	</span><span style="color: #ADD7FF">params</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#123;&#125;,</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// Query order asc, desc or [asc|desc]|&lt;field&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// e.g &quot;desc|id&quot;. Default is &#39;asc&#39;</span></span>
<span class="line"><span style="color: #E4F0FB">	</span><span style="color: #ADD7FF">orderAndBy</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">asc</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// namespace allows you proxy a resource with another name</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// E.g. &#39;profile&#39; could still be used as &#39;users&#39; namespace.</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// That is profile is not known to you system but &#39;users&#39;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// namespace defaults to &#39;&#39;.</span></span>
<span class="line"><span style="color: #E4F0FB">	</span><span style="color: #ADD7FF">namespace</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#39;&#39;</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// You can pre-populate a store by passing &#96;initData&#96;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// of StoreState&lt;T&gt; type</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// It defaults to &#123;&#125;</span></span>
<span class="line"><span style="color: #E4F0FB">	</span><span style="color: #ADD7FF">initData</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#123;&#125;,</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// includes helps control what fields are returned</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// It is pipe-separated string of resource names.</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// resource name is comma-saparate string of fields</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// E.g. &#39;users:name, age, gender | accounts: accountId, balance&#39; where</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// users and accounts are resource names and their fields are listed after &#96;:&#96;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// The above example is for when there are relationship</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// in multiple resources(join).</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// It defaults to &#39;&#39;.</span></span>
<span class="line"><span style="color: #E4F0FB">	</span><span style="color: #ADD7FF">includes</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#39;&#39;</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// resultTransformer is a StoreResultTransformer type, a function you can pass</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// to intercept and convert the data from your API to what</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// &#96;useStore&#96; understands, the StoreState type.</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// This is important when using the &#96;.sync&#96; method of store</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// to synchronize/fetch data from your APIs.</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// It accepts the raw data from your API and</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// returns the transformed data. See transformer.js above.</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// It defaults to undefined</span></span>
<span class="line"><span style="color: #E4F0FB">	</span><span style="color: #ADD7FF">resultTransformer</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #D0679D">undefined</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// queryTransformer is a StoreQueryTransformer type, a function you can pass</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// to intercept and convert your query to what your API expects.</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// This is important when using the &#96;.sync&#96; method of store</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// to synchronize/fetch data from your APIs.</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// It accepts the raw query and</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// returns the transformed query for your API.</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// It defaults to undefined</span></span>
<span class="line"><span style="color: #E4F0FB">	</span><span style="color: #ADD7FF">queryTransformer</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #D0679D">undefined</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">//Specifies transport context</span></span>
<span class="line"><span style="color: #E4F0FB">	</span><span style="color: #ADD7FF">transportContext</span><span style="color: #A6ACCD">:</span><span style="color: #ADD7FF"> </span><span style="color: #D0679D">undefined</span></span>
<span class="line"><span style="color: #A6ACCD">&#125;;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// Let&#39;s create a users store</span></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">users</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FBD0">useStore</span><span style="color: #A6ACCD">(</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// resource name, not path please. Required</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">users</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// store props. Optional</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #E4F0FB">usersProps</span></span>
<span class="line"><span style="color: #A6ACCD">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// Of all the store arguments, the &#96;resource name/path&#96; is mandatory</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// StoreProps is optional and could be omitted, for instance:</span></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">people</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FBD0">useStore</span><span style="color: #A6ACCD">(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">users</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">);</span></span></code></pre>`);var D=s(A,4);a(D,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">type</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">StoreState&lt;</span><span style="color: #A6ACCDC0">T</span><span style="color: #A6ACCD">&gt;</span><span style="color: #ADD7FF"> </span><span style="color: #91B4D5">=</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#123;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// result target</span></span>
<span class="line"><span style="color: #ADD7FF">	data</span><span style="color: #91B4D5">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCDC0">T</span><span style="color: #A6ACCD">[];</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// total record count</span></span>
<span class="line"><span style="color: #ADD7FF">	recordCount</span><span style="color: #91B4D5">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCDC0">number</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// Number of pages for limit per page</span></span>
<span class="line"><span style="color: #ADD7FF">	pages</span><span style="color: #91B4D5">?:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCDC0">number</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// What page number are we on?</span></span>
<span class="line"><span style="color: #ADD7FF">	page</span><span style="color: #91B4D5">?:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCDC0">number</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// Record per page</span></span>
<span class="line"><span style="color: #ADD7FF">	limit</span><span style="color: #91B4D5">?:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCDC0">number</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// Are we processing network?</span></span>
<span class="line"><span style="color: #ADD7FF">	loading</span><span style="color: #91B4D5">?:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCDC0">boolean</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// Are there error based on request</span></span>
<span class="line"><span style="color: #ADD7FF">	error</span><span style="color: #91B4D5">?:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCDC0">string</span><span style="color: #ADD7FF"> </span><span style="color: #91B4D5">|</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCDC0">null</span><span style="color: #ADD7FF"> </span><span style="color: #91B4D5">|</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCDC0">undefined</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// Params that produced result or error</span></span>
<span class="line"><span style="color: #ADD7FF">	params</span><span style="color: #91B4D5">?:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCDC0">Params</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #ADD7FF">	transportContext</span><span style="color: #91B4D5">?:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCDC0">string</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #A6ACCD">&#125;;</span></span></code></pre>`);var i=s(D,4);a(i,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #91B4D5">type</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">IngressType</span><span style="color: #ADD7FF"> </span><span style="color: #91B4D5">=</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#123;</span></span>
<span class="line"><span style="color: #ADD7FF">	page</span><span style="color: #91B4D5">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCDC0">number</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #ADD7FF">	per_page</span><span style="color: #91B4D5">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCDC0">number</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #ADD7FF">	total</span><span style="color: #91B4D5">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCDC0">number</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #ADD7FF">	total_pages</span><span style="color: #91B4D5">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCDC0">numbers</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #ADD7FF">	data</span><span style="color: #91B4D5">:</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCDC0">unknow</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #A6ACCD">&#125;;</span></span></code></pre>`);var d=s(i,4);a(d,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #5DE4C7">export</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">resultTransformer</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> &lt;</span><span style="color: #A6ACCDC0">User</span><span style="color: #A6ACCD">&gt;(</span><span style="color: #E4F0FB">raw</span><span style="color: #91B4D5">:</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCDC0">IngressType</span><span style="color: #A6ACCD">)</span><span style="color: #91B4D5">:</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCDC0">StoreResult</span><span style="color: #A6ACCD">&lt;</span><span style="color: #A6ACCDC0">User</span><span style="color: #A6ACCD">&gt; </span><span style="color: #91B4D5">=&gt;</span><span style="color: #A6ACCD"> &#123;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// raw is what comes from regres.in</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> &#123; </span><span style="color: #E4F0FB">page</span><span style="color: #A6ACCD">, per_page: </span><span style="color: #E4F0FB">limit</span><span style="color: #A6ACCD">, total: </span><span style="color: #E4F0FB">recordCount</span><span style="color: #A6ACCD">, total_pages: </span><span style="color: #E4F0FB">pages</span><span style="color: #A6ACCD">, </span><span style="color: #E4F0FB">data</span><span style="color: #A6ACCD"> &#125; </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">raw</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #767C9DB0; font-style: italic">// return what conforms to StoreState</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #5DE4C7C0">return</span><span style="color: #A6ACCD"> &#123;</span><span style="color: #E4F0FB"> page</span><span style="color: #A6ACCD">,</span><span style="color: #E4F0FB"> limit</span><span style="color: #A6ACCD">,</span><span style="color: #E4F0FB"> recordCount</span><span style="color: #A6ACCD">,</span><span style="color: #E4F0FB"> pages</span><span style="color: #A6ACCD">,</span><span style="color: #E4F0FB"> data</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#125;;</span></span>
<span class="line"><span style="color: #A6ACCD">&#125;;</span></span></code></pre>`);var F=s(d,10);a(F,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">useStore</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> &#123;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #E4F0FB">sync</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">	result: &#123; </span><span style="color: #E4F0FB">loading</span><span style="color: #A6ACCD">, </span><span style="color: #E4F0FB">data</span><span style="color: #A6ACCD">, </span><span style="color: #E4F0FB">error</span><span style="color: #A6ACCD"> &#125;</span></span>
<span class="line"><span style="color: #A6ACCD">&#125; </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FBD0">useStore</span><span style="color: #A6ACCD">(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">users</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">);</span></span>
<span class="line"><span style="color: #E4F0FBD0">$effect</span><span style="color: #A6ACCD">(() </span><span style="color: #91B4D5">=&gt;</span><span style="color: #A6ACCD"> &#123;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #E4F0FBD0">sync</span><span style="color: #A6ACCD">();</span></span>
<span class="line"><span style="color: #A6ACCD">&#125;);</span></span></code></pre>`);var E=s(F,2);a(E,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #E4F0FB">&lt;</span><span style="color: #5DE4C7">header</span><span style="color: #E4F0FB">&gt;Users&lt;/</span><span style="color: #5DE4C7">header</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">&#123;#if </span><span style="color: #E4F0FB">loading</span><span style="color: #A6ACCD">&#125;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #E4F0FB">&lt;</span><span style="color: #5DE4C7">p</span><span style="color: #E4F0FB">&gt;Loading users...&lt;/</span><span style="color: #5DE4C7">p</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">&#123;</span><span style="color: #91B4D5">/</span><span style="color: #A6ACCD">if&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">&#123;#if </span><span style="color: #91B4D5">!!</span><span style="color: #E4F0FB">error</span><span style="color: #A6ACCD">&#125;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #E4F0FB">&lt;</span><span style="color: #5DE4C7">p</span><span style="color: #E4F0FB">&gt;Error:&#123;error&#125;&lt;/</span><span style="color: #5DE4C7">p</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">&#123;</span><span style="color: #91B4D5">/</span><span style="color: #A6ACCD">if&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">&#123;#if </span><span style="color: #E4F0FB">data</span><span style="color: #A6ACCD"> &#125;</span></span>
<span class="line"><span style="color: #A6ACCD">	&#123;#</span><span style="color: #E4F0FB">each</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">users</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCDC0">as</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCDC0">user</span><span style="color: #A6ACCD">&#125;</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #E4F0FB">&lt;</span><span style="color: #5DE4C7">p</span><span style="color: #E4F0FB">&gt;Name: &#123;user</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FB">first_name&#125; &#123;user</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FB">last_name&#125;&lt;/</span><span style="color: #5DE4C7">p</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">	&#123;</span><span style="color: #91B4D5">/</span><span style="color: #E4F0FB">each</span><span style="color: #A6ACCD">&#125;</span></span>
<span class="line"><span style="color: #A6ACCD">&#123;</span><span style="color: #91B4D5">/</span><span style="color: #A6ACCD">if&#125;</span></span></code></pre>`);var u=s(E,6);a(u,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">useStore</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">type</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">Account</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">...</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FBD0">useStore</span><span style="color: #A6ACCD">&lt;</span><span style="color: #A6ACCDC0">Account</span><span style="color: #A6ACCD">&gt;(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">accounts</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span><span style="color: #91B4D5">...</span><span style="color: #A6ACCD">);</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// force sync</span></span>
<span class="line"><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">sync</span><span style="color: #A6ACCD">();</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// or with initial data</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// initData is of type StoreState&lt;Account&gt;</span></span>
<span class="line"><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">sync</span><span style="color: #A6ACCD">(</span><span style="color: #E4F0FB">initData</span><span style="color: #A6ACCD">)</span></span></code></pre>`);var B=s(u,4);a(B,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">useStore</span><span style="color: #A6ACCD">,</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">Resource</span><span style="color: #A6ACCD">,</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">type</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">StoreResult</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">type</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">Account</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">...</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FBD0">useStore</span><span style="color: #A6ACCD">&lt;</span><span style="color: #A6ACCDC0">Account</span><span style="color: #A6ACCD">&gt;(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">accounts</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span><span style="color: #91B4D5">...</span><span style="color: #A6ACCD">);</span></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">onNext</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> () </span><span style="color: #91B4D5">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">next</span><span style="color: #A6ACCD">();</span></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">onPrev</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> () </span><span style="color: #91B4D5">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">prev</span><span style="color: #A6ACCD">();</span></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">onMore</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> () </span><span style="color: #91B4D5">=&gt;</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">more</span><span style="color: #A6ACCD">();</span></span></code></pre>`);var h=s(B,4);a(h,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #A6ACCD">&#123;#</span><span style="color: #E4F0FB">snippet</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FBD0">resolve</span><span style="color: #A6ACCD">(&#123;</span><span style="color: #E4F0FB"> loading</span><span style="color: #A6ACCD">,</span><span style="color: #E4F0FB"> data</span><span style="color: #A6ACCD">,</span><span style="color: #E4F0FB"> error</span><span style="color: #A6ACCD">,</span><span style="color: #E4F0FB"> page</span><span style="color: #A6ACCD">,</span><span style="color: #E4F0FB"> pages</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#125;:</span><span style="color: #E4F0FB">StoreResult</span><span style="color: #91B4D5">&lt;</span><span style="color: #E4F0FB">Account</span><span style="color: #91B4D5">&gt;</span><span style="color: #A6ACCD">)&#125;</span></span>
<span class="line"><span style="color: #A6ACCD">	&#123;#if </span><span style="color: #E4F0FB">data</span><span style="color: #A6ACCD">&#125;</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #E4F0FB">&lt;</span><span style="color: #5DE4C7">AccountList</span><span style="color: #E4F0FB"> </span><span style="color: #91B4D5; font-style: italic">users</span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">&#123;data&#125;</span><span style="color: #A6ACCD">&quot;</span><span style="color: #E4F0FB"> /&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #E4F0FB">&lt;</span><span style="color: #5DE4C7">div</span><span style="color: #E4F0FB"> </span><span style="color: #91B4D5; font-style: italic">class</span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">buttons</span><span style="color: #A6ACCD">&quot;</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E4F0FB">			&lt;</span><span style="color: #5DE4C7">button</span><span style="color: #E4F0FB"> </span><span style="color: #91B4D5; font-style: italic">onclick</span><span style="color: #91B4D5">=</span><span style="color: #E4F0FB">&#123;accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FB">prev &#125; </span><span style="color: #91B4D5; font-style: italic">disabled</span><span style="color: #91B4D5">=</span><span style="color: #E4F0FB">&#123;page </span><span style="color: #91B4D5">===</span><span style="color: #5DE4C7">1</span><span style="color: #E4F0FB"> &#125;&gt;Previous page&lt;/</span><span style="color: #5DE4C7">button</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"><span style="color: #E4F0FB">			&lt;</span><span style="color: #5DE4C7">button</span><span style="color: #E4F0FB"> </span><span style="color: #91B4D5; font-style: italic">onclick</span><span style="color: #91B4D5">=</span><span style="color: #E4F0FB">&#123;accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FB">next &#125; </span><span style="color: #91B4D5; font-style: italic">disabled</span><span style="color: #91B4D5">=</span><span style="color: #E4F0FB">&#123;page</span><span style="color: #91B4D5">===</span><span style="color: #E4F0FB">pages &#125;&gt;Next page&lt;/</span><span style="color: #5DE4C7">button</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"><span style="color: #E4F0FB">			&lt;</span><span style="color: #5DE4C7">button</span><span style="color: #E4F0FB"> </span><span style="color: #91B4D5; font-style: italic">onclick</span><span style="color: #91B4D5">=</span><span style="color: #E4F0FB">&#123;accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FB">more &#125; </span><span style="color: #91B4D5; font-style: italic">disabled</span><span style="color: #91B4D5">=</span><span style="color: #E4F0FB">&#123; page </span><span style="color: #91B4D5">===</span><span style="color: #E4F0FB"> pages &#125;&gt;</span></span>
<span class="line"><span style="color: #E4F0FB">				more(append to view)...</span></span>
<span class="line"><span style="color: #E4F0FB">			&lt;/</span><span style="color: #5DE4C7">button</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E4F0FB">		&lt;/</span><span style="color: #5DE4C7">div</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">	&#123;</span><span style="color: #91B4D5">/</span><span style="color: #A6ACCD">if&#125;</span></span>
<span class="line"><span style="color: #A6ACCD">	&#123;#if </span><span style="color: #E4F0FB">loading</span><span style="color: #A6ACCD">&#125;</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #E4F0FB">&lt;</span><span style="color: #5DE4C7">p</span><span style="color: #E4F0FB"> </span><span style="color: #91B4D5; font-style: italic">class</span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">spinner</span><span style="color: #A6ACCD">&quot;</span><span style="color: #E4F0FB">&gt;Fetching data...&lt;/</span><span style="color: #5DE4C7">p</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">	&#123;if&#125;</span></span>
<span class="line"><span style="color: #A6ACCD">	&#123;#if </span><span style="color: #E4F0FB">error</span><span style="color: #A6ACCD">&#125;</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #E4F0FB">&lt;</span><span style="color: #5DE4C7">p</span><span style="color: #E4F0FB"> </span><span style="color: #91B4D5; font-style: italic">class</span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">danger</span><span style="color: #A6ACCD">&quot;</span><span style="color: #E4F0FB">&gt;Error: &#123;error&#125;&lt;/</span><span style="color: #5DE4C7">p</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">	&#123;if&#125;</span></span>
<span class="line"><span style="color: #A6ACCD">&#123;</span><span style="color: #91B4D5">/</span><span style="color: #E4F0FB">snippet</span><span style="color: #A6ACCD">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E4F0FB">&lt;</span><span style="color: #5DE4C7">Resource</span><span style="color: #E4F0FB"> </span><span style="color: #91B4D5; font-style: italic">store</span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">&#123;accounts&#125;</span><span style="color: #A6ACCD">&quot;</span><span style="color: #E4F0FB"> &#123;resolve&#125; /&gt;</span></span></code></pre>`);var f=s(h,4);a(f,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">useStore</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">type</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">Account</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">...</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FBD0">useStore</span><span style="color: #A6ACCD">&lt;</span><span style="color: #A6ACCDC0">Account</span><span style="color: #A6ACCD">&gt;(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">accounts</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span><span style="color: #91B4D5">...</span><span style="color: #A6ACCD">);</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// Fire and forget</span></span>
<span class="line"><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">save</span><span style="color: #A6ACCD">(&#123;</span><span style="color: #ADD7FF">accountName</span><span style="color: #A6ACCD">:</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">Account Name</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span><span style="color: #E4F0FB"> </span><span style="color: #ADD7FF">accountNo</span><span style="color: #A6ACCD">:</span><span style="color: #5DE4C7">1234</span><span style="color: #A6ACCD">&#125;);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// Fire and inspect</span></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> &#123; </span><span style="color: #E4F0FB">error</span><span style="color: #A6ACCD">, </span><span style="color: #E4F0FB">message</span><span style="color: #A6ACCD">, </span><span style="color: #E4F0FB">data</span><span style="color: #A6ACCD">, </span><span style="color: #E4F0FB">status</span><span style="color: #A6ACCD"> &#125; </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #5DE4C7C0">await</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">save</span><span style="color: #A6ACCD">(&#123;</span><span style="color: #ADD7FF">accountName</span><span style="color: #A6ACCD">:</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">Account Name</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span><span style="color: #E4F0FB"> </span><span style="color: #ADD7FF">accountNo</span><span style="color: #A6ACCD">:</span><span style="color: #5DE4C7">1234</span><span style="color: #A6ACCD">&#125;);</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// Do something with fields</span></span>
<span class="line"></span></code></pre>`);var g=s(f,4);a(g,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">useStore</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">type</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">Account</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">...</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FBD0">useStore</span><span style="color: #A6ACCD">&lt;</span><span style="color: #A6ACCDC0">Account</span><span style="color: #A6ACCD">&gt;(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">accounts</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span><span style="color: #91B4D5">...</span><span style="color: #A6ACCD">);</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// Fire and forget</span></span>
<span class="line"><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">destroy</span><span style="color: #A6ACCD">(&#123;</span><span style="color: #ADD7FF">id</span><span style="color: #A6ACCD">:</span><span style="color: #5DE4C7">12345678</span><span style="color: #A6ACCD">&#125;);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// Fire and inspect</span></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> &#123;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #E4F0FB">error</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #E4F0FB">message</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #E4F0FB">data</span><span style="color: #A6ACCD">,</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #E4F0FB">status</span></span>
<span class="line"><span style="color: #A6ACCD">	&#125; </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #5DE4C7C0">await</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">destroy</span><span style="color: #A6ACCD">(&#123;</span><span style="color: #ADD7FF">id</span><span style="color: #A6ACCD">:</span><span style="color: #5DE4C7">12345678</span><span style="color: #A6ACCD">&#125;);</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// Do something with fields</span></span>
<span class="line"></span></code></pre>`);var m=s(g,4);a(m,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">useStore</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">type</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">Account</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">...</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FBD0">useStore</span><span style="color: #A6ACCD">&lt;</span><span style="color: #A6ACCDC0">Account</span><span style="color: #A6ACCD">&gt;(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">accounts</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span><span style="color: #91B4D5">...</span><span style="color: #A6ACCD">);</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// Fire and forget</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// Seach can be added and customized via &#96;queryTransformer&#96;</span></span>
<span class="line"><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">search</span><span style="color: #A6ACCD">(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">google</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">);</span></span></code></pre>`);var b=s(m,4);a(b,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">useStore</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">type</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">Account</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">...</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FBD0">useStore</span><span style="color: #A6ACCD">&lt;</span><span style="color: #A6ACCDC0">Account</span><span style="color: #A6ACCD">&gt;(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">accounts</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span><span style="color: #91B4D5">...</span><span style="color: #A6ACCD">);</span></span>
<span class="line"><span style="color: #E4F0FBD0">$effect</span><span style="color: #A6ACCD">(</span><span style="color: #5DE4C7">async</span><span style="color: #A6ACCD"> () </span><span style="color: #91B4D5">=&gt;</span><span style="color: #A6ACCD"> &#123;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #767C9DB0; font-style: italic">// The following will make a GET request to &#96;/accounts/checking&#96;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #767C9DB0; font-style: italic">// path using the passed params</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> &#123; </span><span style="color: #E4F0FB">data</span><span style="color: #A6ACCD">, </span><span style="color: #E4F0FB">error</span><span style="color: #A6ACCD">&#125; </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #5DE4C7C0">await</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">get</span><span style="color: #A6ACCD">(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">/checking</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,&#123;</span><span style="color: #91B4D5">...</span><span style="color: #A6ACCD">&#125;);</span></span>
<span class="line"><span style="color: #A6ACCD">&#125;)</span></span></code></pre>`);var v=s(b,4);a(v,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">useStore</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">type</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">Account</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">...</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FBD0">useStore</span><span style="color: #A6ACCD">&lt;</span><span style="color: #A6ACCDC0">Account</span><span style="color: #A6ACCD">&gt;(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">accounts</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span><span style="color: #91B4D5">...</span><span style="color: #A6ACCD">);</span></span>
<span class="line"><span style="color: #E4F0FBD0">$effect</span><span style="color: #A6ACCD">(</span><span style="color: #5DE4C7">async</span><span style="color: #A6ACCD"> () </span><span style="color: #91B4D5">=&gt;</span><span style="color: #A6ACCD"> &#123;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #767C9DB0; font-style: italic">// The following will make a request to POST &#96;/accounts/checking&#96;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #767C9DB0; font-style: italic">// path using the passed params</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> &#123; </span><span style="color: #E4F0FB">data</span><span style="color: #A6ACCD">, </span><span style="color: #E4F0FB">error</span><span style="color: #A6ACCD">&#125; </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #5DE4C7C0">await</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">post</span><span style="color: #A6ACCD">(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">/checking</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,&#123;</span><span style="color: #91B4D5">...</span><span style="color: #A6ACCD">&#125;);</span></span>
<span class="line"><span style="color: #A6ACCD">&#125;)</span></span></code></pre>`);var w=s(v,4);a(w,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">useStore</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">type</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">Account</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">...</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FBD0">useStore</span><span style="color: #A6ACCD">&lt;</span><span style="color: #A6ACCDC0">Account</span><span style="color: #A6ACCD">&gt;(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">accounts</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span><span style="color: #91B4D5">...</span><span style="color: #A6ACCD">);</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// Seach for &#96;12345&#96; on the &#96;accountId&#96; field</span></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">targetAccount</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #5DE4C7C0">await</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">find</span><span style="color: #A6ACCD">(</span><span style="color: #E4F0FB">key</span><span style="color: #A6ACCD">:</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">accountId</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">, </span><span style="color: #E4F0FB">value</span><span style="color: #A6ACCD">:</span><span style="color: #5DE4C7">12345</span><span style="color: #A6ACCD">);</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// Check and use targetAccount</span></span></code></pre>`);var T=s(w,4);a(T,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">useStore</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">type</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">Account</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">...</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FBD0">useStore</span><span style="color: #A6ACCD">&lt;</span><span style="color: #A6ACCDC0">Account</span><span style="color: #A6ACCD">&gt;(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">accounts</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span><span style="color: #91B4D5">...</span><span style="color: #A6ACCD">);</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// Filters for  &#96;accountName&#96; that equals &#39;Steve Samson&#39;</span></span>
<span class="line"><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">filter</span><span style="color: #A6ACCD">(&#123;</span><span style="color: #ADD7FF">accountName</span><span style="color: #A6ACCD">:</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">Steve Samson</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">&#125;);</span></span></code></pre>`);var k=s(T,4);a(k,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">type</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">EventHandler</span><span style="color: #A6ACCD">,</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">useStore</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">type</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">Account</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">...</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FBD0">useStore</span><span style="color: #A6ACCD">&lt;</span><span style="color: #A6ACCDC0">Account</span><span style="color: #A6ACCD">&gt;(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">accounts</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span><span style="color: #91B4D5">...</span><span style="color: #A6ACCD">);</span></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">onAccountUpdate</span><span style="color: #91B4D5">:</span><span style="color: #A6ACCDC0">EventHandler</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> (</span><span style="color: #E4F0FB">account</span><span style="color: #91B4D5">:</span><span style="color: #A6ACCDC0">Account</span><span style="color: #A6ACCD">) </span><span style="color: #91B4D5">=&gt;</span><span style="color: #A6ACCD">&#123;</span></span>
<span class="line"><span style="color: #A6ACCD">    </span><span style="color: #E4F0FB">console</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">log</span><span style="color: #A6ACCD">(</span><span style="color: #A6ACCD">&#96;$&#123;</span><span style="color: #E4F0FB">account</span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> was updated!</span><span style="color: #A6ACCD">&#96;</span><span style="color: #A6ACCD">);</span></span>
<span class="line"><span style="color: #A6ACCD">&#125;;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// onAccountUpdate will be called when update</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// happens on any account in the store</span></span>
<span class="line"><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">on</span><span style="color: #A6ACCD">(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">update</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span><span style="color: #E4F0FB">onAccountUpdate</span><span style="color: #A6ACCD">);</span></span></code></pre>`);var S=s(k,6);a(S,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">type</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">EventHandler</span><span style="color: #A6ACCD">,</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">useStore</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">type</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">Account</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">...</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FBD0">useStore</span><span style="color: #A6ACCD">&lt;</span><span style="color: #A6ACCDC0">Account</span><span style="color: #A6ACCD">&gt;(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">accounts</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span><span style="color: #91B4D5">...</span><span style="color: #A6ACCD">);</span></span>
<span class="line"><span style="color: #767C9DB0; font-style: italic">// id is required</span></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">account</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> &#123;</span><span style="color: #ADD7FF">accountName</span><span style="color: #A6ACCD">:</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">Account Name</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">,</span><span style="color: #E4F0FB"> </span><span style="color: #ADD7FF">accountNo</span><span style="color: #A6ACCD">:</span><span style="color: #5DE4C7">2345566</span><span style="color: #A6ACCD">,</span><span style="color: #E4F0FB"> </span><span style="color: #ADD7FF">id</span><span style="color: #A6ACCD">:</span><span style="color: #5DE4C7">new</span><span style="color: #ADD7FF"> </span><span style="color: #E4F0FBD0">Date</span><span style="color: #A6ACCD">().</span><span style="color: #E4F0FBD0">getTime</span><span style="color: #A6ACCD">()&#125;;</span></span>
<span class="line"><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">add</span><span style="color: #A6ACCD">(</span><span style="color: #E4F0FB">account</span><span style="color: #A6ACCD">);</span></span>
<span class="line"><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">patch</span><span style="color: #A6ACCD">(&#123;</span><span style="color: #91B4D5">...</span><span style="color: #E4F0FB">account</span><span style="color: #A6ACCD">,</span><span style="color: #E4F0FB"> </span><span style="color: #ADD7FF">accountName</span><span style="color: #A6ACCD">:</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">Updated Account Name</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">&#125;);</span></span>
<span class="line"><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FBD0">remove</span><span style="color: #A6ACCD">(</span><span style="color: #E4F0FB">account</span><span style="color: #A6ACCD">);</span></span>
<span class="line"></span></code></pre>`);var x=s(S,14);a(x,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #767C9DB0; font-style: italic">// svelte file</span></span>
<span class="line"><span style="color: #A6ACCD">&lt;</span><span style="color: #A6ACCDC0">script</span><span style="color: #A6ACCD">&gt;</span></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">useStore</span><span style="color: #A6ACCD">,</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">type</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">StoreResult</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">type</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">Account</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">...</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">accounts</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FBD0">useStore</span><span style="color: #A6ACCD">&lt;</span><span style="color: #A6ACCDC0">Account</span><span style="color: #A6ACCD">&gt;(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">some</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #91B4D5">&lt;/</span><span style="color: #E4F0FB">script</span><span style="color: #91B4D5">&gt;</span></span>
<span class="line"></span></code></pre>`);var q=s(x,2);a(q,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #A6ACCD">&#123;#</span><span style="color: #E4F0FB">snippet</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FBD0">resolve</span><span style="color: #A6ACCD">(&#123;</span><span style="color: #E4F0FB"> data</span><span style="color: #A6ACCD">,</span><span style="color: #E4F0FB"> loading</span><span style="color: #A6ACCD">,</span><span style="color: #E4F0FB"> error</span><span style="color: #A6ACCD">,</span><span style="color: #E4F0FB"> page</span><span style="color: #A6ACCD">,</span><span style="color: #E4F0FB"> pages</span><span style="color: #ADD7FF"> </span><span style="color: #A6ACCD">&#125;:</span><span style="color: #E4F0FB">StoreResult</span><span style="color: #91B4D5">&lt;</span><span style="color: #E4F0FB">Account</span><span style="color: #91B4D5">&gt;</span><span style="color: #A6ACCD">)&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #E4F0FB">&lt;</span><span style="color: #5DE4C7">AccountList</span><span style="color: #E4F0FB"> </span><span style="color: #91B4D5; font-style: italic">users</span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">&#123;data&#125;</span><span style="color: #A6ACCD">&quot;</span><span style="color: #E4F0FB"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">	&#123;#if </span><span style="color: #E4F0FB">loading</span><span style="color: #A6ACCD">&#125;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #E4F0FB">&lt;</span><span style="color: #5DE4C7">p</span><span style="color: #E4F0FB">&gt;Loading data...&lt;/</span><span style="color: #5DE4C7">p</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">	&#123;</span><span style="color: #91B4D5">/</span><span style="color: #A6ACCD">if&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A6ACCD">	&#123;#if </span><span style="color: #E4F0FB">data</span><span style="color: #A6ACCD">&#125;</span></span>
<span class="line"><span style="color: #A6ACCD">		</span><span style="color: #E4F0FB">&lt;</span><span style="color: #5DE4C7">div</span><span style="color: #E4F0FB"> </span><span style="color: #91B4D5; font-style: italic">class</span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">buttons</span><span style="color: #A6ACCD">&quot;</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"><span style="color: #E4F0FB">			&lt;</span><span style="color: #5DE4C7">button</span><span style="color: #E4F0FB"> </span><span style="color: #91B4D5; font-style: italic">onclick</span><span style="color: #91B4D5">=</span><span style="color: #E4F0FB">&#123;accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FB">prev &#125; </span><span style="color: #91B4D5; font-style: italic">disabled</span><span style="color: #91B4D5">=</span><span style="color: #E4F0FB">&#123;page </span><span style="color: #91B4D5">===</span><span style="color: #5DE4C7">1</span><span style="color: #E4F0FB"> &#125;&gt;Previous page&lt;/</span><span style="color: #5DE4C7">button</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"><span style="color: #E4F0FB">			&lt;</span><span style="color: #5DE4C7">button</span><span style="color: #E4F0FB"> </span><span style="color: #91B4D5; font-style: italic">onclick</span><span style="color: #91B4D5">=</span><span style="color: #E4F0FB">&#123;accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FB">next &#125; </span><span style="color: #91B4D5; font-style: italic">disabled</span><span style="color: #91B4D5">=</span><span style="color: #E4F0FB">&#123;page</span><span style="color: #91B4D5">===</span><span style="color: #E4F0FB">pages &#125;&gt;Next page&lt;/</span><span style="color: #5DE4C7">button</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"><span style="color: #E4F0FB">			&lt;</span><span style="color: #5DE4C7">button</span><span style="color: #E4F0FB"> </span><span style="color: #91B4D5; font-style: italic">onclick</span><span style="color: #91B4D5">=</span><span style="color: #E4F0FB">&#123;accounts</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FB">more &#125; </span><span style="color: #91B4D5; font-style: italic">disabled</span><span style="color: #91B4D5">=</span><span style="color: #E4F0FB">&#123; page </span><span style="color: #91B4D5">===</span><span style="color: #E4F0FB"> pages &#125;&gt;</span></span>
<span class="line"><span style="color: #E4F0FB">				more(append to view)...</span></span>
<span class="line"><span style="color: #E4F0FB">			&lt;/</span><span style="color: #5DE4C7">button</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"><span style="color: #E4F0FB">		&lt;/</span><span style="color: #5DE4C7">div</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">	&#123;</span><span style="color: #91B4D5">/</span><span style="color: #A6ACCD">if&#125;</span></span>
<span class="line"><span style="color: #A6ACCD">	&#123;#if </span><span style="color: #E4F0FB">error</span><span style="color: #A6ACCD">&#125;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #E4F0FB">&lt;</span><span style="color: #5DE4C7">h4</span><span style="color: #E4F0FB">&gt;Oh, error?&lt;/</span><span style="color: #5DE4C7">h4</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #E4F0FB">&lt;</span><span style="color: #5DE4C7">p</span><span style="color: #E4F0FB">&gt;&#123;error&#125;&lt;/</span><span style="color: #5DE4C7">p</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">	&#123;</span><span style="color: #91B4D5">/</span><span style="color: #A6ACCD">if&#125;</span></span>
<span class="line"><span style="color: #A6ACCD">&#123;</span><span style="color: #91B4D5">/</span><span style="color: #E4F0FB">snippet</span><span style="color: #A6ACCD">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E4F0FB">&lt;</span><span style="color: #5DE4C7">Resource</span><span style="color: #E4F0FB"> </span><span style="color: #91B4D5; font-style: italic">store</span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">&#123;accounts&#125;</span><span style="color: #A6ACCD">&quot;</span><span style="color: #E4F0FB"> </span><span style="color: #91B4D5; font-style: italic">resolve</span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">&#123;resolve&#125;</span><span style="color: #A6ACCD">&quot;</span><span style="color: #E4F0FB"> /&gt;</span></span></code></pre>`);var I=s(q,6);a(I,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #A6ACCD"> </span><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;type</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">UseEvent</span><span style="color: #A6ACCD">,</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">useEvents</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&quot;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #A6ACCD"> </span><span style="color: #767C9DB0; font-style: italic">// Here loading is the scope of the created event</span></span>
<span class="line"><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">loadEvent</span><span style="color: #91B4D5">:</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCDC0">UseEvent</span><span style="color: #A6ACCD">&lt;</span><span style="color: #A6ACCDC0">boolean</span><span style="color: #A6ACCD">&gt; </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FBD0">useEvents</span><span style="color: #A6ACCD">&lt;</span><span style="color: #A6ACCDC0">boolean</span><span style="color: #A6ACCD">&gt;(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">loading</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">, </span><span style="color: #D0679D">false</span><span style="color: #A6ACCD">);</span></span>
<span class="line"><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">...</span></span>
<span class="line"><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">...</span></span>
<span class="line"><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">function</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">start</span><span style="color: #A6ACCD">()&#123;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #E4F0FB">loadEvent</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FB">value</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #5DE4C7">true</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #A6ACCD"> &#125;</span></span>
<span class="line"><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">function</span><span style="color: #A6ACCD"> </span><span style="color: #ADD7FF">done</span><span style="color: #A6ACCD">()&#123;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #E4F0FB">loadEvent</span><span style="color: #A6ACCD">.</span><span style="color: #E4F0FB">value</span><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #D0679D">false</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #A6ACCD"> &#125;</span></span>
<span class="line"></span></code></pre>`);var P=s(I,4);a(P,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #A6ACCD">&lt;</span><span style="color: #A6ACCDC0">script</span><span style="color: #A6ACCD">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD"> </span><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;type</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">UseEvent</span><span style="color: #A6ACCD">,</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">useEvents</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&quot;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&quot;</span><span style="color: #A6ACCD">;</span></span>
<span class="line"><span style="color: #A6ACCD"> </span><span style="color: #767C9DB0; font-style: italic">// Here loading is the scope of the created event</span></span>
<span class="line"><span style="color: #A6ACCD"> </span><span style="color: #91B4D5">const</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FB">loader</span><span style="color: #91B4D5">:</span><span style="color: #A6ACCD"> </span><span style="color: #A6ACCDC0">UseEvent</span><span style="color: #A6ACCD">&lt;</span><span style="color: #A6ACCDC0">boolean</span><span style="color: #A6ACCD">&gt; </span><span style="color: #91B4D5">=</span><span style="color: #A6ACCD"> </span><span style="color: #E4F0FBD0">useEvents</span><span style="color: #A6ACCD">&lt;</span><span style="color: #A6ACCDC0">boolean</span><span style="color: #A6ACCD">&gt;(</span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">loading</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">, </span><span style="color: #D0679D">false</span><span style="color: #A6ACCD">);</span></span>
<span class="line"><span style="color: #91B4D5">&lt;/</span><span style="color: #E4F0FB">script</span><span style="color: #91B4D5">&gt;</span></span></code></pre>`);var _=s(P,2);a(_,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #A6ACCD">&#123;#if loader.value&#125;</span></span>
<span class="line"><span style="color: #E4F0FB">&lt;</span><span style="color: #5DE4C7">p</span><span style="color: #E4F0FB">&gt;</span><span style="color: #A6ACCD">Loading...</span><span style="color: #E4F0FB">&lt;/</span><span style="color: #5DE4C7">p</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">&#123;/if&#125;</span></span></code></pre>`);var R=s(_,10);a(R,()=>'<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #5DE4C7">import </span><span style="color: #A6ACCD">&#123;</span><span style="color: #5DE4C7"> </span><span style="color: #ADD7FF">Offline</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#125;</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">from</span><span style="color: #5DE4C7"> </span><span style="color: #A6ACCD">&#39;</span><span style="color: #5DE4C7">svesta</span><span style="color: #A6ACCD">&#39;</span><span style="color: #A6ACCD">;</span></span></code></pre>');var O=s(R,2);a(O,()=>`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #E4F0FB">&lt;</span><span style="color: #D0679D">Offline</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"><span style="color: #A6ACCD">	</span><span style="color: #E4F0FB">&lt;</span><span style="color: #5DE4C7">p</span><span style="color: #E4F0FB">&gt;</span><span style="color: #A6ACCD">Content to show when offline.</span><span style="color: #E4F0FB">&lt;/</span><span style="color: #5DE4C7">p</span><span style="color: #E4F0FB">&gt;</span></span>
<span class="line"><span style="color: #E4F0FB">&lt;/</span><span style="color: #D0679D">Offline</span><span style="color: #E4F0FB">&gt;</span></span></code></pre>`),N(L,n)}export{X as component};
